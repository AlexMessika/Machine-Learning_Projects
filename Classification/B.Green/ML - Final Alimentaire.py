{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ML - Final Alimentaire.py","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNqxXAbX/i/tAnWl932i2o5"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"_7sduLZxZtCV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":107},"outputId":"3713e850-39fd-4c86-ff3e-e2975aba4a42","executionInfo":{"status":"ok","timestamp":1590254079447,"user_tz":-120,"elapsed":925,"user":{"displayName":"alexandre messika","photoUrl":"","userId":"06329052339187445104"}}},"source":["import numpy as np\n","import pandas as pd\n","from sklearn.datasets import load_breast_cancer\n","import matplotlib\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.externals import joblib "],"execution_count":1,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n","/usr/local/lib/python3.6/dist-packages/sklearn/externals/joblib/__init__.py:15: FutureWarning: sklearn.externals.joblib is deprecated in 0.21 and will be removed in 0.23. Please import this functionality directly from joblib, which can be installed with: pip install joblib. If this warning is raised when loading pickled models, you may need to re-serialize those models with scikit-learn 0.21+.\n","  warnings.warn(msg, category=FutureWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"6aRRjgV5hxqs","colab_type":"code","colab":{}},"source":["f = open(\"depot.txt\", \"r\")\n","string = f.read()\n","string = string[:-1]\n","tab = string.split(\";\")\n","tab"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"GxgwF1qqh7Wj","colab_type":"code","colab":{}},"source":["def convert_one(x):\n","  if x == \"viandejamais\": return 1\n","  if x == \"vinderarement\": return 2\n","  if x == \"viandequelque\": return 3\n","  if x == \"viandetousjour\": return 4\n","  else: return 0\n","\n","def convert_two(x):\n","  if x == \"legumejamais\": return 1\n","  if x == \"legumerarement\": return 2\n","  if x == \"legumequelque\": return 3\n","  if x == \"legumetousjour\": return 4\n","  else: return 0\n","\n","def convert_three(x):\n","  if x == \"fruitjamais\": return 1\n","  if x == \"fruitrarement\": return 2\n","  if x == \"fruitquelque\": return 3\n","  if x == \"fruittousjour\": return 4\n","  else: return 0\n","\n","def convert_four(x):\n","  if x == \"laitjamais\": return 1\n","  if x == \"laitrarement\": return 2\n","  if x == \"laitquelque\": return 3\n","  if x == \"laittousjour\": return 4\n","  else: return 0\n","\n","def convert_five(x):\n","  if x == \"poissonjamais\": return 1\n","  if x == \"poissonrarement\": return 2\n","  if x == \"poissonquelque\": return 3\n","  if x == \"poissontousjour\": return 4\n","  else: return 0\n","\n","def convert_six(x):\n","  if x == \"sucrejamais\": return 1\n","  if x == \"sucrerarement\": return 2\n","  if x == \"sucrequelque\": return 3\n","  if x == \"sucretousjour\": return 4\n","  else: return 0\n","\n","def convert_seven(x):\n","  if x == \"biojamais\": return 1\n","  if x == \"biorarement\": return 2\n","  if x == \"bioquelque\": return 3\n","  if x == \"biotousjour\": return 4\n","  else: return 0\n","\n","def convert_eight(x):\n","  if x == \"labelsjamais\": return 1\n","  if x == \"labelsrarement\": return 2\n","  if x == \"labelsquelque\": return 3\n","  if x == \"labelstousjour\": return 4\n","  else: return 0\n","\n","def convert_nine(x):\n","  if x == \"provenancejamais\": return 1\n","  if x == \"provenancerarement\": return 2\n","  if x == \"provenancequelque\": return 3\n","  if x == \"provenancetousjour\": return 4\n","  else: return 0\n","\n","def convert_ten(x):\n","  if x == \"saisonjamais\": return 1\n","  if x == \"saisonrarement\": return 2\n","  if x == \"saisonquelque\": return 3\n","  if x == \"saisontousjour\": return 4\n","  else: return 0\n","\n","def convert_eleven(x):\n","  if x == \"fraisjamais\": return 1\n","  if x == \"fraisrarement\": return 2\n","  if x == \"fraisquelque\": return 3\n","  if x == \"fraistousjour\": return 4\n","  else: return 0\n","\n","def convert_twelve(x):\n","  if x == \"gaspillagejamais\": return 1\n","  if x == \"gaspillagerarement\": return 2\n","  if x == \"gaspillagequelque\": return 3\n","  if x == \"gaspillagetousjour\": return 4\n","  else: return 0\n","\n","def convert_thirteen(x):\n","  if x == \"fastfoodjamais\": return 1\n","  if x == \"fastfoodrarement\": return 2\n","  if x == \"fastfoodquelque\": return 3\n","  if x == \"fastfoodtousjour\": return 4\n","  else: return 0\n","\n","\n","\n","tab[0] = convert_one(tab[0])\n","tab[1] = convert_two(tab[1])\n","tab[2] = convert_three(tab[2])\n","tab[3] = convert_four(tab[3])\n","tab[4] = convert_five(tab[4])\n","tab[5] = convert_six(tab[5])\n","tab[6] = convert_seven(tab[6])\n","tab[7] = convert_eight(tab[7])\n","tab[8] = convert_nine(tab[8])\n","tab[9] = convert_ten(tab[9])\n","tab[10] = convert_eleven(tab[10])\n","tab[11] = convert_twelve(tab[11])\n","tab[12] = convert_thirteen(tab[12])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"M_bTJ_LEnn8b","colab_type":"code","colab":{}},"source":["tab = [tab]\n","Tab = np.asarray(tab)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Cg5kipZxnsV1","colab_type":"code","colab":{}},"source":["knn_from_joblib = joblib.load('Model_alimentaire.pkl')  \n","note = knn_from_joblib.predict(Tab) "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"40EmYSl0nuzO","colab_type":"code","colab":{}},"source":["if note < 0 : note = 0\n","if note > 4 : note = 4\n","text_file = open(\"retour.txt\", \"w\")\n","n = text_file.write(str(note[0][0]))\n","text_file.close()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"euT9Aiptnw71","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}